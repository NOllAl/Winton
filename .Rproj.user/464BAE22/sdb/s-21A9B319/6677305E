{
    "contents" : "---\ntitle: \"Data exploration\"\nauthor: \"Alexander Noll\"\ndate: \"`r Sys.Date()`\"\noutput: html_document\n---\n\n```{r, include = FALSE}\nlibrary(dplyr)\nlibrary(ggplot2)\n```\n\n# Data\n\n## Loading\n\n```{r}\ntrain <- \n    readr::read_csv(\"~/Desktop/Data_Science_Scale/Winton/Winton/Data/train.csv\")\n```\n\n## Features\n\nWe first want to understand the columns of the data:\n\n* We have 40000 observations of 211 variables\n\nEach observation has 25 features (**Feature_1 - Feature_25**) whose meaning is not further specified, the return from one day ago **Ret_MinusTwo**, the return from the half of the current day **Ret_MinusOne** and the interday return (roughly minutewise) starting from the end of the time period where **Ret_MinusOne** ends. In the training sample, we additionally have the target varialbes **Ret_121 - Ret180**, **Ret_PlusOne** and **Ret_PlusTwo**. Furthermore, there are two weight variables **Weight_Intraday** and **Weight_Daily** needed for evaluation purposes.\n\n## Evaluation\n\nThe evaluation function is defined as folows:\n\n```{r}\nWMAE <- function(pred_returns, actual_returns, weights){\n    # Computes the weighted mean absolute error according to the forumula\n    # on the Kaggle page\n    #\n    # Args: pred_returns: numeric vector of length 62; the first 60\n    #          elements correspond to intraday returns, the last two to daily\n    #          returns\n    #       actual_returns: numeric vector of length 62; analogous to above\n    #       weights: numeric vector of length two\n    #\n    # Returns: weighted mean absolute error\n    \n    intraday_ret <- \n        sum(abs(pred_returns[1:60] - actual_returns[1:60]) * weights[1])\n    daily_ret <- \n        sum(abs(pred_returns[61:62] - actual_returns[61:62]) * weights[2])\n    \n    return(1 / length(pred_returns) * (intraday_ret + daily_ret))\n}\n```\n\n## Missing values\n\nOur next step is to understand the missing values in the data frame:\n\n```{r}\nPlotMissing <- function(df){\n    # Plots number of missing values of a data frame\n    #\n    # Args: df data frame\n    #\n    # Returns: Plot with missing values plotted\n    \n    missing <-\n        colSums(is.na(df)) %>%\n        matrix(nrow = ncol(df)) %>%\n        as.data.frame %>%\n        mutate(col_name = colnames(df)) %>%\n        rename(n_missing = V1) %>%\n        filter(n_missing > 0)\n    \n    ggplot(missing, aes(x = col_name, y = n_missing)) + \n        geom_bar(stat = \"identity\") +\n        theme(axis.text.x = element_text(angle = 90, hjust = 1))\n}\n\nPlotMissing(train)\n```\n\nFrom the plot it seems that some features look unusable, e.g. features 1 and 10.\n\n## Time series of means:\n\n```{r}\nmeans <-\n    data_frame(\n        means = \n            train %>% \n            select(starts_with(\"Ret_\")) %>%\n            colMeans(na.rm = TRUE),\n        sd = \n            train %>%\n            select(starts_with(\"Ret_\")) %>%\n            apply(2, sd, na.rm = TRUE),\n        time = 1 :183\n    ) %>%\n    mutate(\n        means_max = means + 2 * sd,\n        means_min = means - 2 * sd\n    )\n\nggplot(means, aes(x = time, y = means)) +\n    geom_point() +\n    geom_line() + \n    geom_errorbar(aes(x = time, ymax = means_max, ymin = means_min)) +\n    scale_y_continuous(limits = c(-0.0001, 0.0001))\n        \n```\n\nIn this plot, nothing really is visible and, in fact, that is to be expected. We can, however, use the just constructed data to look at the autocorrelation coefficient:\n\n```{r}\nacf(means$means)\n```\n\nHere we can see that there is a quite significant negative autocorrelation at lag one. The fact that it is only at lag one, of course, makes it difficult to predict beyond **Ret_121**.\n\n## Time series of some examples\n\n```{r}\nPlotRow <- function(row_num) {\n    # Plots time series of a row\n    #\n    # Args: row_num...integer between and 1 and 40000\n    #\n    # Returns: plot of time series\n    \n    time_series <- \n        train[row_num, ] %>% \n        select(starts_with(\"Ret_\")) %>%\n        select(-Ret_MinusTwo, -Ret_MinusOne, -Ret_PlusOne, -Ret_PlusTwo) %>%\n        as.matrix %>%\n        t %>% \n        as.data.frame %>%\n        rename(ret = V1) %>%\n        mutate(time = 1:179)\n    \n    ggplot(time_series, aes(x = time, y = ret)) +\n        geom_point() + \n        geom_line() + \n        geom_smooth(method = \"lm\")\n}\nPlotRow(2)\n```",
    "created" : 1446903936160.000,
    "dirty" : false,
    "encoding" : "UTF-8",
    "folds" : "124|30|145|0|\n",
    "hash" : "4274670117",
    "id" : "6677305E",
    "lastKnownWriteTime" : 1447190565,
    "path" : "~/Desktop/Data_Science_Scale/Winton/Winton/Markdown/DataExploration.Rmd",
    "project_path" : "Markdown/DataExploration.Rmd",
    "properties" : {
        "tempName" : "Untitled1"
    },
    "relative_order" : 1,
    "source_on_save" : false,
    "type" : "r_markdown"
}